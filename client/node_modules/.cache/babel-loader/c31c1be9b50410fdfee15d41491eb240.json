{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levit\\\\WebstormProjects\\\\PetRecs\\\\client\\\\src\\\\components\\\\Register.js\";\n// Register.js\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport { Link } from 'react-router-dom';\nexport class Register extends Component {\n  //const { register, handleSubmit, errors } = useForm();\n  //const onSubmit = (data) => console.log(data)\n  //const accountOptions = [\n  //    { value: '1', label: 'Pet Owner' },\n  //    { value: '2', label: 'Veterinarian'}\n  //];\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      accountType: '',\n      msg: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  addFormData(evt) {\n    evt.preventDefault();\n    const fd = new FormData();\n    fd.append('myUsername', this.refs.myUsername.value);\n    fd.append('myEmail', this.refs.myEmail.value);\n    var headers = {\n      'Content-Type': 'application/json;charset=UTF-8',\n      \"Access-Control-Allow-Origin\": \"*\"\n    };\n    axios.post('http://localhost/core_php.php', fd, headers).then(res => {\n      alert(res.data.data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fill-window fullPageContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginRegPageHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"homePageHeaderItem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require('../pet-recs-logo_low-qual.png'),\n      width: \"48\",\n      height: \"55\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }), \"PetRecs\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Create an Account\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      className: \"loginRegForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, \"E-Mail Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"example@mail.com\",\n      ref: register({\n        required: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }), errors.email && \"Email is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      ref: register({\n        required: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }), errors.password && \"Password is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicRepeatPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, \"Repeat Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"password_confirm\",\n      type: \"password\",\n      placeholder: \"Password\",\n      ref: register({\n        required: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }), errors.password_confirm && \"Repeat Password is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicAccountType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, \"Account Type\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"accountType\",\n      as: \"select\",\n      ref: register({\n        required: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, \" \", accountOptions.map((option, label) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: label,\n        value: option.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 45\n        }\n      }, option.label);\n    })), errors.accountType && \"Account Type is required\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      size: \"sm\",\n      className: \"btn-form\",\n      onClick: this.addFormData,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, \"Register\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"btn btn-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"Register\")));\n  }\n\n}\nexport default Register;","map":{"version":3,"sources":["C:/Users/Levit/WebstormProjects/PetRecs/client/src/components/Register.js"],"names":["React","Form","Button","axios","useForm","Link","Register","Component","constructor","props","state","email","password","accountType","msg","handleSubmit","bind","addFormData","evt","preventDefault","fd","FormData","append","refs","myUsername","value","myEmail","headers","post","then","res","alert","data","render","require","onSubmit","register","required","errors","password_confirm","accountOptions","map","option","label"],"mappings":"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","sourcesContent":["// Register.js\r\n\r\nimport React from 'react'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport { useForm } from \"react-hook-form\"\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Register extends Component {\r\n\r\n    //const { register, handleSubmit, errors } = useForm();\r\n    //const onSubmit = (data) => console.log(data)\r\n\r\n    //const accountOptions = [\r\n    //    { value: '1', label: 'Pet Owner' },\r\n    //    { value: '2', label: 'Veterinarian'}\r\n    //];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            accountType: '',\r\n            msg: ''\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    addFormData(evt) {\r\n        evt.preventDefault();\r\n        const fd = new FormData();\r\n        fd.append('myUsername', this.refs.myUsername.value);\r\n        fd.append('myEmail', this.refs.myEmail.value);\r\n        var headers = {\r\n            'Content-Type': 'application/json;charset=UTF-8',\r\n            \"Access-Control-Allow-Origin\": \"*\"\r\n        }\r\n        axios.post('http://localhost/core_php.php', fd, headers\r\n        ).then(res => {\r\n                alert(res.data.data);\r\n            }\r\n        );\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"fill-window fullPageContainer\">\r\n                <div className=\"loginRegPageHeader\">\r\n                    <div className=\"homePageHeaderItem\">\r\n                        <img src={require('../pet-recs-logo_low-qual.png')} width='48' height='55'/>\r\n                        PetRecs\r\n                    </div>\r\n                </div>\r\n                <div className=\"formBox\">\r\n                    <div className=\"formTitle\">\r\n                        Create an Account\r\n                    </div>\r\n                    <Form onSubmit={handleSubmit(onSubmit)} className=\"loginRegForm\">\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>E-Mail Address</Form.Label>\r\n                            <Form.Control name=\"email\" type=\"email\" placeholder=\"example@mail.com\"\r\n                                          ref={register({required: true})}/>\r\n                            {errors.email && \"Email is required\"}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\"\r\n                                          ref={register({required: true})}/>\r\n                            {errors.password && \"Password is required\"}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicRepeatPassword\">\r\n                            <Form.Label>Repeat Password</Form.Label>\r\n                            <Form.Control name=\"password_confirm\" type=\"password\" placeholder=\"Password\"\r\n                                          ref={register({required: true})}/>\r\n                            {errors.password_confirm && \"Repeat Password is required\"}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formBasicAccountType\">\r\n                            <Form.Label>Account Type</Form.Label>\r\n                            <Form.Control name=\"accountType\" as={\"select\"} ref={register({required: true})}> {\r\n                                accountOptions.map((option, label) => {\r\n                                    return (<option key={label} value={option.label}>{option.label}</option>)\r\n                                })\r\n                            }\r\n                            </Form.Control>\r\n                            {errors.accountType && \"Account Type is required\"}\r\n                        </Form.Group>\r\n\r\n                        <br/>\r\n                        <Button variant=\"secondary\" size=\"sm\" className=\"btn-form\" onClick={this.addFormData}\r\n                                type=\"submit\">Register</Button>\r\n                    </Form>\r\n\r\n                    <br/><br/>\r\n                    <Link to=\"/\" className=\"btn btn-secondary\">Register</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register"]},"metadata":{},"sourceType":"module"}