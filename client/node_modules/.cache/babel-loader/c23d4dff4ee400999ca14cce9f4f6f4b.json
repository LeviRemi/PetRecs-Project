{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levit\\\\WebstormProjects\\\\PetRecs\\\\client\\\\src\\\\components\\\\Register.js\";\n// Register.js\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useForm } from \"react-hook-form\";\nimport { Link } from 'react-router-dom';\n\nfunction Register(props) {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  const accountOptions = [{\n    value: '1',\n    label: 'Pet Owner'\n  }, {\n    value: '2',\n    label: 'Veterinarian'\n  }];\n  const initialAccountState = {\n    id: \"\",\n    email: \"\",\n    password: \"\",\n    accountType: \"\"\n  };\n  const [account, setAccount] = useState(initialAccountState);\n  const apiUrl = \"http://localhost:5000/api/accounts/\";\n\n  const registerAccount = e => {\n    e.preventDefault();\n    const data = {\n      email: account.email,\n      password: account.password,\n      accountType: account.accountType\n    };\n    console.log(data);\n  };\n\n  const onChange = e => {\n    e.persist();\n    setAccount({});\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fill-window fullPageContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loginRegPageHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"homePageHeaderItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require('../pet-recs-logo_low-qual.png'),\n    width: \"48\",\n    height: \"55\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), \"PetRecs\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Create an Account\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"loginRegForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \"E-Mail Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"example@mail.com\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }), errors.email && \"Email is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }), errors.password && \"Password is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicRepeatPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, \"Repeat Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"password_confirm\",\n    type: \"password\",\n    placeholder: \"Password\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }), errors.password_confirm && \"Repeat Password is required\"), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicAccountType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, \"Account Type\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"accountType\",\n    as: \"select\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \" \", accountOptions.map((option, label) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: label,\n      value: option.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 45\n      }\n    }, option.label);\n  })), errors.accountType && \"Account Type is required\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    size: \"sm\",\n    className: \"btn-form\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Register\")));\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/Levit/WebstormProjects/PetRecs/client/src/components/Register.js"],"names":["React","useState","Form","Button","useForm","Link","Register","props","register","handleSubmit","errors","onSubmit","data","console","log","accountOptions","value","label","initialAccountState","id","email","password","accountType","account","setAccount","apiUrl","registerAccount","e","preventDefault","onChange","persist","require","required","password_confirm","map","option"],"mappings":"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","sourcesContent":["// Register.js\r\n\r\nimport React, {useState} from 'react'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useForm } from \"react-hook-form\"\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Register(props) {\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const onSubmit = (data) => console.log(data)\r\n\r\n    const accountOptions = [\r\n        { value: '1', label: 'Pet Owner' },\r\n        { value: '2', label: 'Veterinarian'}\r\n    ];\r\n\r\n    const initialAccountState = {\r\n        id: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        accountType: \"\"\r\n    };\r\n\r\n    const [account, setAccount] = useState(initialAccountState);\r\n    const apiUrl = \"http://localhost:5000/api/accounts/\";\r\n\r\n    const registerAccount = (e) => {\r\n        e.preventDefault();\r\n        const data = {\r\n            email: account.email,\r\n            password: account.password,\r\n            accountType: account.accountType\r\n        };\r\n\r\n        console.log(data);\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        e.persist();\r\n        setAccount({\r\n            \r\n        })\r\n    }\r\n\r\n\r\n        return (\r\n        <div className=\"fill-window fullPageContainer\">\r\n            <div className=\"loginRegPageHeader\">\r\n                <div className=\"homePageHeaderItem\">\r\n                    <img src={require('../pet-recs-logo_low-qual.png')} width='48' height='55' />\r\n                    PetRecs\r\n                </div>\r\n            </div>\r\n            <div className=\"formBox\">\r\n                <div className=\"formTitle\">\r\n                    Create an Account\r\n                </div>\r\n                <Form onSubmit={handleSubmit(onSubmit)} className=\"loginRegForm\">\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>E-Mail Address</Form.Label>\r\n                        <Form.Control name=\"email\" type=\"email\" placeholder=\"example@mail.com\" ref={register({ required: true })}/>\r\n                        {errors.email && \"Email is required\"}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" ref={register({ required: true })} />\r\n                        {errors.password && \"Password is required\"}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicRepeatPassword\">\r\n                        <Form.Label>Repeat Password</Form.Label>\r\n                        <Form.Control name=\"password_confirm\" type=\"password\" placeholder=\"Password\" ref={register({ required: true })} />\r\n                        {errors.password_confirm && \"Repeat Password is required\"}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicAccountType\">\r\n                        <Form.Label>Account Type</Form.Label>\r\n                        <Form.Control name=\"accountType\" as={\"select\"} ref={register({ required: true })}> {\r\n                                accountOptions.map((option, label) => {\r\n                                    return (<option key={label} value={option.label}>{option.label}</option>)\r\n                                })\r\n                            }\r\n                        </Form.Control>\r\n                        {errors.accountType && \"Account Type is required\"}\r\n                    </Form.Group>\r\n\r\n                    <br />\r\n                    <Button variant=\"secondary\" size=\"sm\" className=\"btn-form\" type=\"submit\">Register</Button>\r\n                </Form>\r\n                \r\n                <br /><br />\r\n                <Link to=\"/\" className=\"btn btn-secondary\">Register</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register"]},"metadata":{},"sourceType":"module"}