{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jcfle\\\\git\\\\PetRecs\\\\client\\\\src\\\\components\\\\FileUpload.js\";\n// FileUpload.js\nimport React, { useState } from 'react';\nimport { storage } from \"../firebase\";\nimport { render } from \"react-dom\";\n\nfunction FileUpload() {\n  const [image, setImage] = useState(null);\n  const [url, setUrl] = useState(\"\");\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleUpload = () => {\n    const uploadTask = storage.ref(`PetImages/${image.name}`).put(image);\n    uploadTask.on(\"status_changed\", snapshot => {}, error => {\n      console.log(error);\n    }, () => {\n      storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n        setUrl(url);\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Upload\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/Users/jcfle/git/PetRecs/client/src/components/FileUpload.js"],"names":["React","useState","storage","render","FileUpload","image","setImage","url","setUrl","handleChange","e","target","files","handleUpload","uploadTask","ref","name","put","on","snapshot","error","console","log","child","getDownloadURL","then"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,SAASC,UAAT,GAAsB;AAElB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMQ,YAAY,GAAGC,CAAC,IAAI;AACtB,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAJ,EAAuB;AACnBN,MAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAR;AACH;AACJ,GAJD;;AAMA,QAAMC,YAAY,GAAG,MAAM;AACvB,UAAMC,UAAU,GAAGZ,OAAO,CAACa,GAAR,CAAa,aAAYV,KAAK,CAACW,IAAK,EAApC,EAAuCC,GAAvC,CAA2CZ,KAA3C,CAAnB;AACAS,IAAAA,UAAU,CAACI,EAAX,CACI,gBADJ,EAEIC,QAAQ,IAAI,CAAE,CAFlB,EAGIC,KAAK,IAAI;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KALL,EAMI,MAAM;AACFlB,MAAAA,OAAO,CACFa,GADL,CACS,QADT,EAEKQ,KAFL,CAEWlB,KAAK,CAACW,IAFjB,EAGKQ,cAHL,GAIKC,IAJL,CAIUlB,GAAG,IAAI;AACTC,QAAAA,MAAM,CAACD,GAAD,CAAN;AACH,OANL;AAOH,KAdL;AAgBH,GAlBD;;AAoBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEE,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,OAAO,EAAEI,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAQH;;AAED,eAAeT,UAAf","sourcesContent":["// FileUpload.js\r\n\r\nimport React, {useState} from 'react'\r\nimport { storage } from \"../firebase\";\r\nimport { render } from \"react-dom\"\r\n\r\nfunction FileUpload() {\r\n\r\n    const [image, setImage] = useState(null);\r\n    const [url, setUrl] = useState(\"\");\r\n\r\n    const handleChange = e => {\r\n        if (e.target.files[0]) {\r\n            setImage(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const handleUpload = () => {\r\n        const uploadTask = storage.ref(`PetImages/${image.name}`).put(image);\r\n        uploadTask.on(\r\n            \"status_changed\",\r\n            snapshot => {},\r\n            error => {\r\n                console.log(error);\r\n            },\r\n            () => {\r\n                storage\r\n                    .ref(\"images\")\r\n                    .child(image.name)\r\n                    .getDownloadURL()\r\n                    .then(url => {\r\n                        setUrl(url);\r\n                    });\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"file\" onChange={handleChange} />\r\n            <button onClick={handleUpload}>Upload</button>\r\n            <span></span>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default FileUpload"]},"metadata":{},"sourceType":"module"}