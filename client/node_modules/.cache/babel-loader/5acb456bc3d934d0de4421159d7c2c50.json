{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levit\\\\WebstormProjects\\\\PetRecs\\\\client\\\\src\\\\components\\\\Login.js\";\n// Login.js\nimport React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useForm } from \"react-hook-form\";\nimport * as bcrypt from \"bcrypt\";\n\nfunction Login() {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    // TODO: validate user and if valid: grant session / log them in\n    console.log(JSON.stringify(data));\n    const pass = bcrypt.hash(data.Password, 10);\n    axios.post('http://localhost:5000/api/accounts/login/', {\n      // need to see if ok to send password in POST request\n      Email: data.email,\n      Password: pass\n    }).then(res => {\n      console.log(res);\n    }, err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fill-window fullPageContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loginRegPageHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"homePageHeaderItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"PetRecs Logo\",\n    src: require('../pet-recs-logo_low-qual.png'),\n    width: \"48\",\n    height: \"55\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }), \"PetRecs\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    className: \"loginRegForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"E-Mail Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"example@mail.com\",\n    autoComplete: \"email\",\n    ref: register({\n      required: true,\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }), errors.email && (errors.email.message || \"Email is required\")), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    autoComplete: \"current-password\",\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }), errors.password && \"Password is required\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    size: \"sm\",\n    className: \"btn-form\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Log in\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/Pets\",\n    className: \"btn btn-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Login\")));\n}\n\nexport default Login;\n/*\r\n\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n    return (\r\n        \r\n        <div>\r\n            <div>\r\n                <h1>Login</h1>\r\n            </div>\r\n            <p>This is the Login Page.</p>\r\n            \r\n            <Link to=\"/Pets\" className=\"btn btn-secondary\">Login</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n*/","map":{"version":3,"sources":["C:/Users/Levit/WebstormProjects/PetRecs/client/src/components/Login.js"],"names":["React","Form","Button","Link","axios","useForm","bcrypt","Login","register","handleSubmit","errors","onSubmit","data","console","log","JSON","stringify","pass","hash","Password","post","Email","email","then","res","err","require","required","pattern","value","message","password"],"mappings":"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","sourcesContent":["// Login.js\r\n\r\nimport React from 'react'\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {useForm} from \"react-hook-form\"\r\nimport * as bcrypt from \"bcrypt\";\r\n\r\n\r\nfunction Login() {\r\n\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const onSubmit = (data) => {\r\n        // TODO: validate user and if valid: grant session / log them in\r\n        console.log(JSON.stringify(data));\r\n\r\n        const pass = bcrypt.hash(data.Password, 10);\r\n\r\n        axios.post('http://localhost:5000/api/accounts/login/', {\r\n            // need to see if ok to send password in POST request\r\n            Email: data.email,\r\n            Password: pass\r\n        })\r\n            .then((res) => {\r\n                console.log(res);\r\n            }, (err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"fill-window fullPageContainer\">\r\n            <div className=\"loginRegPageHeader\">\r\n                <div className=\"homePageHeaderItem\">\r\n                    <img alt=\"PetRecs Logo\" src={require('../pet-recs-logo_low-qual.png')} width='48' height='55' />\r\n                    PetRecs\r\n                </div>\r\n            </div>\r\n            <div className=\"formBox\">\r\n                <div className=\"formTitle\">\r\n                    Log In\r\n                </div>\r\n                <Form onSubmit={handleSubmit(onSubmit)} className=\"loginRegForm\">\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>E-Mail Address</Form.Label>\r\n                        <Form.Control name=\"email\" type=\"email\" placeholder=\"example@mail.com\" autoComplete=\"email\"\r\n                                      ref={register(\r\n                                          { required: true,\r\n                                              pattern: {\r\n                                                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                                                  message: \"invalid email address\"\r\n                                              }\r\n                                          })}/>\r\n                        {errors.email && (errors.email.message || \"Email is required\")}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" autoComplete=\"current-password\"\r\n                                      ref={register({ required: true})} />\r\n                        {errors.password && \"Password is required\"}\r\n                    </Form.Group>\r\n                    <br />\r\n                    <Button variant=\"secondary\" size=\"sm\" className=\"btn-form\" type=\"submit\">Log in</Button>\r\n                </Form>\r\n                \r\n                <br /><br />\r\n                <Link to=\"/Pets\" className=\"btn btn-secondary\">Login</Link>\r\n            </div>\r\n\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n\r\n\r\n/*\r\n\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n    return (\r\n        \r\n        <div>\r\n            <div>\r\n                <h1>Login</h1>\r\n            </div>\r\n            <p>This is the Login Page.</p>\r\n            \r\n            <Link to=\"/Pets\" className=\"btn btn-secondary\">Login</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}